{"version":3,"sources":["redux/reducer.js","redux/store.js","components/ErrorBoundary/index.js","components/ErrorBoundary/ErrorBoundary.js","service/pokemonContext.js","service/pokemonService.js","redux/actions.js","components/HomePage/Search/Search.js","components/HomePage/Search/index.js","components/NavBurger/NavBurger.js","components/NavBurger/index.js","components/Navigation/index.js","components/Navigation/Navigation.js","components/AdditionalPage/AdditionalPage.js","components/AdditionalPage/index.js","components/MainHeadline/index.js","components/MainHeadline/MainHeadline.js","components/customHooks/useData.js","components/Spinner/5IPv.gif","components/Spinner/5Q0v.gif","components/Spinner/Spinner.js","components/Spinner/index.js","components/PokemonList/index.js","components/PokemonList/PokemonList.js","components/HomePage/SearchList/SearchList.js","components/HomePage/SearchList/index.js","components/SpinnerSm/index.js","components/SpinnerSm/SpinnerSm.js","components/HomePage/LoadMoreButton/LoadMoreButton.js","components/HomePage/Card/Card.js","components/HomePage/Card/index.js","components/HomePage/PokemonCards/PokemonCards.js","components/HomePage/PokemonCards/index.js","components/HomePage/HomePage.js","components/HomePage/index.js","components/customHooks/useNoData.js","components/PokemonPage/Stats/Stats.js","components/PokemonPage/Stats/index.js","components/PokemonPage/Evolution/Evolution.js","components/PokemonPage/Evolution/index.js","components/PokemonPage/Detail-main/Description/index.js","components/PokemonPage/Detail-main/Description/Description.js","components/PokemonPage/Detail-main/Weight/index.js","components/PokemonPage/Detail-main/Weight/Weight.js","components/PokemonPage/Detail-main/Height/index.js","components/PokemonPage/Detail-main/Height/Height.js","components/PokemonPage/Detail-main/Gender/Gender.js","components/PokemonPage/Detail-main/Gender/index.js","components/PokemonPage/Detail-main/Abilities/Abilities.js","components/PokemonPage/Detail-main/Abilities/index.js","components/PokemonPage/Detail-main/Category/index.js","components/PokemonPage/Detail-main/Category/Category.js","components/PokemonPage/Detail-main/Habitat/index.js","components/PokemonPage/Detail-main/Habitat/Habitat.js","components/PokemonPage/Detail-main/index.js","components/PokemonPage/Detail-main/Detail-main.js","components/PokemonPage/Detail-types/TypeItem/index.js","components/PokemonPage/Detail-types/TypeItem/TypeItem.js","components/PokemonPage/Detail-types/Weaknesses/index.js","components/PokemonPage/Detail-types/Weaknesses/Weaknesses.js","components/PokemonPage/Detail-types/Strengths/index.js","components/PokemonPage/Detail-types/Strengths/Strengths.js","components/PokemonPage/Detail-types/Type/index.js","components/PokemonPage/Detail-types/Type/Type.js","components/PokemonPage/Detail-types/FilteredTypes/FilteredTypes.js","components/PokemonPage/Detail-types/FilteredTypes/index.js","components/PokemonPage/Detail-types/index.js","components/PokemonPage/Detail-types/Detail-types.js","components/404/index.js","components/404/404.js","components/PokemonPage/PokemonPage.js","components/PokemonPage/index.js","components/App/index.js","components/App/App.js","index.js"],"names":["initialState","pokemonCards","loadMore","loadingCards","dataGap","listCache","cardsCache","pokemonList","filteredTypes","loadingFilter","filteredTypesFail","loadingList","error","searchValue","isMaxData","singlePokemonData","loadingPokemon","pageFail","showMobMenu","redirect","reducer","state","action","type","payload","value","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ErrorBoundary","this","setState","props","children","Component","pokemonService","apiBase","offset","step","MAX_DATA","getResource","url","a","fetch","result","ok","Error","json","getMorePokemons","urlData","i","push","Promise","allSettled","map","dataResponse","dataSuccess","filter","resp","status","item","all","data","dataArray","pokemon","name","_isDataAvailable","image","sprites","other","id","getAllPokemons","results","index","getCurrentPokemon","pokemonName","abilities","height","weight","species","stats","types","getPokemonAbilities","pokemonAbilities","getPokemonCategory","category","getPokemonHabitat","habitat","getPokemonWeaknesses","weaknesses","getPokemonStrengths","strengths","getPokemonGender","gender","getPokemonEvolution","evolution","getPokemonDescription","description","getPokemonImage","pokemonTypes","getPokemonTypes","pokemonStats","getPokemonStats","pokemonDescriptionResponse","pokemonDescriptionResult","find","language","replace","speciesResponse","speciesResult","pokemonEvolutionResponse","pokemonEvolutionResult","evolutionChain","obj","currentObj","recursive","key","getChain","chain","getImages","evolutionMatchedArrays","stat","pokemonStrengthsResponse","pokemonStrengthsResult","Set","forEach","add","pokemonWeaknessesResponse","pokemonWeaknessesResult","pokemonCategoryResponse","pokemonCategoryResult","genera","genus","pokemonHabitatResponse","pokemonHabitatResult","abilitiesToShow","ability","pokemonAbilitiesResponse","pokemonAbilitiesResult","transformAbilityName","transformedName","split","join","toUpperCase","slice","text","genderUrls","pokemonGenderResponse","pokemonGenderResult","genderData","genderItem","getFilteredTypes","typeResponse","fillDataGap","PokemonContext","React","createContext","usePokemonService","useContext","PokemonProvider","Provider","cardsLoaded","hideMenu","cacheCards","mapDispatchToProps","searchHandler","searchString","setRedirect","Search","connect","sm","className","onChange","e","target","toLocaleLowerCase","placeholder","onKeyUp","to","pathname","aria-label","viewBox","transform","d","points","toggleMenu","NavBurger","onClick","Navigation","useEffect","document","body","classList","remove","exact","AdditionalPage","MainHeadline","headline","home","useData","loadDataToStore","serviceMethod","catchErr","getData","useCallback","Spinner","spinner","useRef","setRandomSpinner","min","max","images","Pokemon1","Pokemon2","length","Math","floor","random","current","src","alt","ref","PokemonList","pokemons","FilterFail","listLoaded","cacheList","SearchList","filteredPokemons","includes","matchMedia","matches","SpinnerSm","show","loadMoreData","maxDataReached","service","nodata","Card","PokemonCards","mapStateToProps","HomePage","scrollTo","title","Nodata","useNoData","setChart","labels","Object","keys","values","chartOptions","options","noData","plotOptions","bar","horizontal","series","width","Stats","View","Evolution","Description","Weight","Height","Gender","Abilities","Category","Habitat","DetailMain","TypeItem","useRouteMatch","Weaknesses","Strengths","Type","typesLoaded","updateLoadingFilterStatus","typesFail","FilteredTypes","useParams","pokemonType","goBack","useHistory","DetailTypes","path","NonExistentPage","pokemonLoaded","pageNotFound","updateLoadingStatus","PokemonPage","App","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95c9d30d.chunk.js","sourcesContent":["const initialState = {\r\n    pokemonCards: [],\r\n    loadMore: false,\r\n    loadingCards: true,\r\n    dataGap: true,\r\n    listCache: false,\r\n    cardsCache: false,\r\n    pokemonList: [],\r\n    filteredTypes: [],\r\n    loadingFilter: true,\r\n    filteredTypesFail: false,\r\n    loadingList: true,\r\n    error: false,\r\n    searchValue: '',\r\n    isMaxData: false,\r\n    singlePokemonData: [],\r\n    loadingPokemon: true,\r\n    pageFail: false,\r\n    showMobMenu: false,\r\n    redirect: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'CARDS_LOADED':\r\n            return {\r\n                ...state,\r\n                showMobMenu: false,\r\n                loadingCards: false,\r\n                loadMore: false,\r\n                pokemonCards: [...state.pokemonCards, ...action.payload],\r\n                loadingPokemon: true,\r\n                pageFail: false,\r\n                searchValue: '',\r\n                \r\n            }\r\n        case 'LIST_LOADED':\r\n            return {\r\n                ...state,\r\n                showMobMenu: false,\r\n                loadingList: false,\r\n                pokemonList: action.payload,\r\n                loadingPokemon: true,\r\n                pageFail: false,\r\n                searchValue: '',\r\n                \r\n            }\r\n        case 'TYPES_LOADED':\r\n            return {\r\n                ...state,\r\n                loadingFilter: false,\r\n                filteredTypes: action.payload,\r\n                filteredTypesFail: false\r\n            }\r\n        case 'TYPES_FAIL':\r\n            return {\r\n                ...state,\r\n                loadingFilter: false,\r\n                filteredTypesFail: true,\r\n            }\r\n        case 'LOAD_MORE_DATA':\r\n            return {\r\n                ...state,\r\n                loadMore: true,\r\n                cardsCache: false\r\n            }\r\n        case 'REACH_MAX_DATA':\r\n            return {\r\n                ...state,\r\n                isMaxData: true\r\n            }\r\n        case 'FILL_DATA_GAP':\r\n            return {\r\n                ...state,\r\n                dataGap: false\r\n            }\r\n        case 'SEARCHING':\r\n            return {\r\n                ...state,\r\n                searchValue: action.value,\r\n            }\r\n        case 'POKEMON_LOADED':\r\n            return {\r\n                ...state,\r\n                pageFail: false,\r\n                singlePokemonData: action.payload,\r\n                loadingPokemon: false,\r\n                showMobMenu: false,\r\n                searchValue: ''\r\n            }\r\n        case 'LOADING_STATUS_UPDATED':\r\n            return {\r\n                ...state,\r\n                pageFail: false,\r\n                loadingPokemon: true\r\n            }\r\n        case 'LOADING_FILTER_STATUS_UPDATED':\r\n            return {\r\n                ...state,\r\n                loadingFilter: true\r\n            }\r\n        case 'PAGE_NOT_FOUND':\r\n            return {\r\n                ...state,\r\n                pageFail: true,\r\n                loadingPokemon: false,\r\n                searchValue: '',\r\n                showMobMenu: false\r\n            }\r\n        case 'MENU_TOGGLED':\r\n            return {\r\n                ...state,\r\n                showMobMenu: !state.showMobMenu\r\n            }\r\n        case 'MENU_HIDDEN':\r\n            return {\r\n                ...state,\r\n                showMobMenu: false\r\n            }\r\n        case 'CARDS_CACHE':\r\n            return {\r\n                ...state,\r\n                cardsCache: true\r\n            }\r\n        case 'LIST_CACHE':\r\n            return {\r\n                ...state,\r\n                listCache: true\r\n            }\r\n        case 'REDIRECTED_TO': {\r\n            return {\r\n                ...state,\r\n                redirect: action.payload,\r\n                showMobMenu: false,\r\n                searchValue: ''\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import ErrorBoundary from './ErrorBoundary';\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ error: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <h1>Something goes wrong</h1>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport PokemonService from './pokemonService';\r\n\r\nconst pokemonService = new PokemonService();\r\n\r\nconst PokemonContext = React.createContext();\r\nexport const usePokemonService = () => useContext(PokemonContext);\r\n\r\nexport const PokemonProvider = ({ children }) => {\r\n    return (\r\n        <PokemonContext.Provider value={pokemonService}>\r\n            {children}\r\n        </PokemonContext.Provider>\r\n    )\r\n}","export default class PokemonService {\r\n    apiBase = 'https://pokeapi.co/api/v2/';\r\n    offset = 9;\r\n    step = 1;\r\n    MAX_DATA = 10220;\r\n\r\n    getResource = async (url) => {\r\n        const result = await fetch(`${this.apiBase}${url}`);\r\n\r\n        if (!result.ok) {\r\n            throw new Error(`Could not fetch ${this.apiBase}${url}`);\r\n        }\r\n\r\n        return await result.json();\r\n    }\r\n\r\n    getMorePokemons = async () => {\r\n        const urlData = [];\r\n\r\n        for (let i = this.step; i <= this.offset; i++) {\r\n            if (i > this.MAX_DATA) break;\r\n            if (i > 898 && i < 10001) continue;\r\n            urlData.push(`https://pokeapi.co/api/v2/pokemon/${i}`)\r\n        }\r\n\r\n        const dataResponse = await Promise.allSettled(urlData.map(url => fetch(url)));\r\n        const dataSuccess = dataResponse.filter(resp => resp.status === 'fulfilled').map(item => item.value);\r\n        const dataArray = await Promise.all(dataSuccess.map(data => data.json()));\r\n\r\n        this.offset += 9;\r\n        this.step += 9;\r\n\r\n        return dataArray.map(pokemon => {\r\n            return {\r\n                name: this._isDataAvailable(pokemon.name),\r\n                image: this._isDataAvailable(pokemon.sprites?.other?.['official-artwork']?.['front_default']),\r\n                id: this._isDataAvailable(pokemon.id)\r\n            }\r\n        })\r\n    }\r\n\r\n    getAllPokemons = async () => {\r\n        const { results } = await this.getResource('pokemon/?limit=898');\r\n\r\n        return results.map((pokemon, index) => {\r\n            return {\r\n                name: this._isDataAvailable(pokemon.name),\r\n                image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${index + 1}.png`\r\n            }\r\n        })\r\n    }\r\n\r\n    getCurrentPokemon = async (pokemonName) => {\r\n        const { abilities, height, weight, name, id, species, sprites, stats, types } = await this.getResource(`pokemon/${pokemonName}`);\r\n\r\n        const pokemonAbilities = await this.getPokemonAbilities(abilities);\r\n        const category = await this.getPokemonCategory(species);\r\n        const habitat = await this.getPokemonHabitat(species);\r\n        const weaknesses = await this.getPokemonWeaknesses(types);\r\n        const strengths = await this.getPokemonStrengths(types);\r\n        const gender = await this.getPokemonGender(pokemonName);\r\n        const evolution = await this.getPokemonEvolution(species);\r\n        const description = await this.getPokemonDescription(species);\r\n        const image = this.getPokemonImage(sprites);\r\n        const pokemonTypes = this.getPokemonTypes(types);\r\n        const pokemonStats = this.getPokemonStats(stats);\r\n\r\n        return {\r\n            name,\r\n            image,\r\n            description,\r\n            gender,\r\n            height: height / 10,\r\n            weight: weight / 10,\r\n            abilities: pokemonAbilities,\r\n            id,\r\n            types: pokemonTypes,\r\n            category,\r\n            habitat,\r\n            weaknesses,\r\n            strengths,\r\n            stats: pokemonStats,\r\n            evolution\r\n        }\r\n    }\r\n\r\n    getPokemonDescription = async ({ url }) => {\r\n        const pokemonDescriptionResponse = await fetch(url);\r\n        const pokemonDescriptionResult = await pokemonDescriptionResponse.json();\r\n        const description = pokemonDescriptionResult['flavor_text_entries'].find(item => item?.language?.name === 'en')?.['flavor_text'];\r\n\r\n        if (description) {\r\n            return description.replace(/(\\n|\\f|\\t|\\v)/g, ' ').replace('POKéMON', 'pokemon');\r\n        }\r\n\r\n        return this._isDataAvailable(description);\r\n    }\r\n\r\n    getPokemonEvolution = async ({ url }) => {\r\n        const speciesResponse = await fetch(url);\r\n        const speciesResult = await speciesResponse.json();\r\n        const pokemonEvolutionResponse = await fetch(speciesResult['evolution_chain']?.url);\r\n        const pokemonEvolutionResult = await pokemonEvolutionResponse.json();\r\n        const evolutionChain = [];\r\n\r\n        const getChain = (obj) => {\r\n            let currentObj = obj;\r\n\r\n            const recursive = (obj) => {\r\n                for (let key in obj) {\r\n                    if (key === 'evolves_to') {\r\n                        evolutionChain.push(obj.species.name);\r\n                        currentObj = obj[key][0];\r\n                        recursive(currentObj);\r\n                    }\r\n                }\r\n            }\r\n            recursive(currentObj);\r\n\r\n        }\r\n        getChain(pokemonEvolutionResult?.chain);\r\n\r\n        const getImages = async (data) => {\r\n            const evolutionMatchedArrays = await Promise.all(data.map(item => this.getResource(`pokemon/${item}`)));\r\n\r\n            return evolutionMatchedArrays.map(pokemon => {\r\n                return {\r\n                    name: this._isDataAvailable(pokemon.name),\r\n                    image: this._isDataAvailable(pokemon.sprites?.other?.['official-artwork']?.['front_default']),\r\n                    id: this._isDataAvailable(pokemon.id)\r\n                }\r\n            })\r\n        }\r\n\r\n        return await getImages(evolutionChain);\r\n    }\r\n\r\n    getPokemonStats = data => {\r\n        return data.map(item => ({ [item.stat.name]: item['base_stat'] }));\r\n    }\r\n\r\n    getPokemonStrengths = async (data) => {\r\n        const pokemonStrengthsResponse = await Promise.all(data.map(item => fetch(item.type?.url)));\r\n        const pokemonStrengthsResult = await Promise.all(pokemonStrengthsResponse.map(item => item.json()));\r\n        const strengths = new Set();\r\n\r\n        pokemonStrengthsResult.forEach(item => item['damage_relations']?.['double_damage_to'].forEach(item => strengths.add(item.name)));\r\n\r\n        return [...strengths];\r\n    }\r\n\r\n    getPokemonWeaknesses = async (data) => {\r\n        const pokemonWeaknessesResponse = await Promise.all(data.map(item => fetch(item.type?.url)));\r\n        const pokemonWeaknessesResult = await Promise.all(pokemonWeaknessesResponse.map(item => item.json()));\r\n        const weaknesses = new Set();\r\n\r\n        pokemonWeaknessesResult.forEach(item => item['damage_relations']?.['double_damage_from'].forEach(item => weaknesses.add(item.name)));\r\n\r\n        return [...weaknesses];\r\n    }\r\n\r\n    getPokemonCategory = async ({ url }) => {\r\n        const pokemonCategoryResponse = await fetch(url);\r\n        const pokemonCategoryResult = await pokemonCategoryResponse.json();\r\n        const category = pokemonCategoryResult.genera.find(item => item.language?.name === 'en')?.genus;\r\n\r\n        return this._isDataAvailable(category.replace('Pokémon', ''));\r\n    }\r\n\r\n    getPokemonHabitat = async ({ url }) => {\r\n        const pokemonHabitatResponse = await fetch(url);\r\n        const pokemonHabitatResult = await pokemonHabitatResponse.json();\r\n        const { habitat } = pokemonHabitatResult;\r\n\r\n        return this._isDataAvailable(habitat?.name);\r\n    }\r\n\r\n    getPokemonAbilities = async (data) => {\r\n        const abilitiesToShow = data.filter(item => !item['is_hidden']);\r\n        const pokemonAbilitiesResponse = await Promise.all(abilitiesToShow.map(item => fetch(item.ability?.url)));\r\n        const pokemonAbilitiesResult = await Promise.all(pokemonAbilitiesResponse.map(data => data.json()));\r\n\r\n        const transformAbilityName = name => {\r\n            const transformedName = name.split('').map(item => item === '-' ? ' ' : item).join('');\r\n\r\n            return `${transformedName[0].toUpperCase()}${transformedName.slice(1)}`;\r\n        }\r\n\r\n        const abilities = pokemonAbilitiesResult.map(item => {\r\n            const text = item?.['flavor_text_entries']?.find(item => item.language.name === 'en' && item?.['version_group']?.['name'] === 'sun-moon')?.['flavor_text'];\r\n\r\n            return {\r\n                name: this._isDataAvailable(transformAbilityName(item.name)),\r\n                description: this._isDataAvailable(text)\r\n            }\r\n        })\r\n\r\n        return abilities;\r\n    }\r\n\r\n    getPokemonImage = data => {\r\n        return this._isDataAvailable(data.other?.['official-artwork']?.['front_default']);\r\n    }\r\n\r\n    getPokemonGender = async (data) => {\r\n        const genderUrls = [\r\n            'https://pokeapi.co/api/v2/gender/1',\r\n            'https://pokeapi.co/api/v2/gender/2',\r\n            'https://pokeapi.co/api/v2/gender/3'\r\n        ];\r\n\r\n        const pokemonGenderResponse = await Promise.all(genderUrls.map(url => fetch(url)));\r\n        const pokemonGenderResult = await Promise.all(pokemonGenderResponse.map(data => data.json()));\r\n\r\n        const gender = pokemonGenderResult.filter(genderData => {\r\n            return genderData['pokemon_species_details']?.find(genderItem => genderItem['pokemon_species']?.['name'] === data);\r\n        })\r\n\r\n        return gender.map(({ name }) => name);\r\n    }\r\n\r\n    getPokemonTypes = data => {\r\n        return data.map(({ type: { name } }) => name);\r\n    }\r\n\r\n    getFilteredTypes = async (type) => {\r\n        const typeResponse = await fetch(`https://pokeapi.co/api/v2/type/${type}`);\r\n        const { pokemon } = await typeResponse.json();\r\n\r\n        return pokemon.map(({ pokemon: { name } }) => ({ name }));\r\n    }\r\n\r\n    _isDataAvailable = data => {\r\n        return data ? data : 'No data'\r\n    }\r\n\r\n    fillDataGap = () => {\r\n        if (this.step > 898) {\r\n            this.step = 10001;\r\n            this.offset = 10009\r\n        }\r\n    }\r\n}","const cardsLoaded = data => ({ type: 'CARDS_LOADED', payload: data });\r\nconst listLoaded = data => ({ type: 'LIST_LOADED', payload: data });\r\nconst fillDataGap = () => ({ type: 'FILL_DATA_GAP' });\r\nconst loadMoreData = () => ({ type: 'LOAD_MORE_DATA' });\r\nconst searchHandler = searchString => ({ type: 'SEARCHING', value: searchString })\r\nconst maxDataReached = () => ({ type: 'REACH_MAX_DATA' });\r\n\r\nconst pokemonLoaded = data => ({ type: 'POKEMON_LOADED', payload: data });\r\nconst updateLoadingStatus = () => ({ type: 'LOADING_STATUS_UPDATED' });\r\n\r\nconst typesLoaded = data => ({ type: 'TYPES_LOADED', payload: data });\r\nconst updateLoadingFilterStatus = () => ({ type: 'LOADING_FILTER_STATUS_UPDATED' });\r\nconst typesFail = () => ({ type: 'TYPES_FAIL' });\r\n\r\nconst pageNotFound = () => ({ type: 'PAGE_NOT_FOUND' });\r\n\r\nconst toggleMenu = () => ({ type: 'MENU_TOGGLED' });\r\nconst hideMenu = () => ({ type: 'MENU_HIDDEN' });\r\n\r\nconst cacheCards = () => ({ type: 'CARDS_CACHE' });\r\nconst cacheList = () => ({ type: 'LIST_CACHE' });\r\n\r\nconst setRedirect = data => ({ type: 'REDIRECTED_TO', payload: data });\r\n\r\nexport {\r\n    cardsLoaded,\r\n    listLoaded,\r\n    searchHandler,\r\n    fillDataGap,\r\n    loadMoreData,\r\n    maxDataReached,\r\n    pokemonLoaded,\r\n    pageNotFound,\r\n    updateLoadingStatus,\r\n    updateLoadingFilterStatus,\r\n    toggleMenu,\r\n    hideMenu,\r\n    cacheCards,\r\n    cacheList,\r\n    setRedirect,\r\n    typesLoaded,\r\n    typesFail\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { searchHandler, setRedirect } from '../../../redux/actions';\r\nimport './Search.scss';\r\n\r\nconst Search = ({ searchValue, searchHandler, sm, setRedirect }) => {\r\n\r\n    const redirect = (e, value) => {\r\n        if (e.key === 'Enter') {\r\n            setRedirect(value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={sm ? \"search search--sm\" : \"search\"}>\r\n            <input\r\n                type=\"search\"\r\n                value={searchValue}\r\n                onChange={(e) => searchHandler(e.target.value.toLocaleLowerCase())}\r\n                placeholder=\"Search...\"\r\n                className=\"search__field\"\r\n                onKeyUp={(e) => redirect(e, searchValue)}\r\n            />\r\n            <Link to={{ pathname: `/${searchValue}` }} className=\"search__btn\" aria-label=\"search pokemon\">\r\n                <svg viewBox=\"0 0 64 64\"><g><g id=\"Icon-Search\" transform=\"translate(30.000000, 230.000000)\"><path className=\"st0\" d=\"M-2.3-182.9c-10.7,0-19.5-8.7-19.5-19.5c0-10.7,8.7-19.5,19.5-19.5s19.5,8.7,19.5,19.5     C17.1-191.6,8.4-182.9-2.3-182.9L-2.3-182.9z M-2.3-219c-9.2,0-16.7,7.5-16.7,16.7c0,9.2,7.5,16.7,16.7,16.7s16.7-7.5,16.7-16.7     C14.3-211.5,6.8-219-2.3-219L-2.3-219z\" id=\"Fill-1\" /><polyline className=\"st0\" id=\"Fill-2\" points=\"23.7,-174.2 10.1,-187.7 12.3,-189.9 25.8,-176.3 23.7,-174.2    \" /></g></g></svg>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ searchValue }) => ({ searchValue });\r\n\r\nconst mapDispatchToProps = { searchHandler, setRedirect };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import Search from './Search';\r\nexport default Search;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleMenu } from '../../redux/actions';\r\nimport './NavBurger.scss';\r\n\r\nconst NavBurger = ({ toggleMenu }) => (\r\n    <button className=\"nav-burger\" aria-label=\"navigation\" onClick={toggleMenu}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n    </button>\r\n)\r\n\r\nconst mapDispatchToProps = { toggleMenu };\r\n\r\nexport default connect(null, mapDispatchToProps)(NavBurger);","import NavBurger from './NavBurger';\r\nexport default NavBurger;","import Navigation from './Navigation';\r\nexport default Navigation;","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Search from '../HomePage/Search';\r\nimport NavBurger from '../NavBurger';\r\nimport './Navigation.scss';\r\n\r\nconst Navigation = ({ showMobMenu }) => {\r\n\r\n    useEffect(() => {\r\n        if (showMobMenu) {\r\n            document.body.classList.add('menu-open')\r\n        } else {\r\n            document.body.classList.remove('menu-open')\r\n        }\r\n    }, [showMobMenu])\r\n\r\n    return (\r\n        <>\r\n            <NavBurger/>\r\n            <nav className=\"nav\">\r\n                <Search sm/>\r\n                <ul className=\"nav__list\">\r\n                    <li className=\"nav__item\">\r\n                        <NavLink className=\"nav__link link\" to={{ pathname: '/' }} exact>Home</NavLink>\r\n                    </li>\r\n                    <li className=\"nav__item\">\r\n                        <NavLink className=\"nav__link link\" to={{ pathname: '/additional' }}>Additional Page</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ showMobMenu }) => ({ showMobMenu });\r\n\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { hideMenu } from '../../redux/actions';\r\n\r\nconst AdditionalPage = ({ hideMenu }) => {\r\n\r\n    useEffect(() => hideMenu(), [hideMenu]);\r\n\r\n    return (\r\n        <section>\r\n            <h1>Additional Page Content</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = { hideMenu };\r\n\r\nexport default connect(null, mapDispatchToProps)(AdditionalPage);","import AdditionalPage from './AdditionalPage';\r\nexport default AdditionalPage;","import MainHeadline from './MainHeadline';\r\nexport default MainHeadline;\r\n","import React from 'react';\r\nimport './MainHeadline.scss';\r\n\r\nconst MainHeadline = ({ headline = 'Choose your pokemon!', home }) => (\r\n    <h1 className={home ? \"main-headline main-headline--home\" : \"main-headline main-headline--pokemon\"}>{headline}</h1>\r\n)\r\n\r\nexport default MainHeadline;","import { useCallback } from 'react';\r\n\r\nconst useData = (loadDataToStore, serviceMethod, catchErr) => {\r\n\r\n    const getData = useCallback(async(id) => {\r\n        try {\r\n            const data = await serviceMethod(id);\r\n            loadDataToStore(data);\r\n        } catch (err) {\r\n            catchErr();\r\n        }\r\n    }, [loadDataToStore, serviceMethod, catchErr])\r\n\r\n    return { getData }\r\n}\r\n\r\nexport default useData;","export default __webpack_public_path__ + \"static/media/5IPv.c8db92f6.gif\";","export default __webpack_public_path__ + \"static/media/5Q0v.e61d80e8.gif\";","import React, { useCallback, useEffect, useRef } from 'react';\r\nimport './Spinner.scss';\r\nimport Pokemon1 from './5IPv.gif';\r\nimport Pokemon2 from './5Q0v.gif';\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst Spinner = ({ sm }) => {\r\n    const spinner = useRef(null);\r\n\r\n    const setRandomSpinner = useCallback(() => {\r\n        const images = [Pokemon1, Pokemon2];\r\n\r\n        return images[getRandomInt(0, images.length - 1)]\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        spinner.current.src = setRandomSpinner();\r\n    }, [setRandomSpinner])\r\n\r\n    return (\r\n        <div className={sm ? \"spinner spinner--sm\" : \"spinner spinner--pokemon\"}>\r\n            <img className=\"spinner__img img\" alt=\"spinner\" ref={spinner} />\r\n            <p className=\"spinner__text\">loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import Spinner from './Spinner';\r\nexport default Spinner;","import PokemonList from './PokemonList';\r\nexport default PokemonList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './PokemonList.scss';\r\n\r\nconst PokemonList = ({ pokemons, types }) => (\r\n    <ul className=\"pokemon-list\">\r\n        {\r\n            pokemons.map(({ name, image }) => (\r\n                <li key={name} className=\"pokemon-list__item\">\r\n                    <Link className=\"pokemon-list__link link\" to={`/${name}`}>\r\n                        <span className=\"pokemon-list__name\">{name}</span>\r\n                        {image === 'No data' || types ? null : <img className=\"pokemon-list__img img\" src={image} alt={name} />}\r\n                    </Link>\r\n                </li>\r\n            ))\r\n        }\r\n    </ul>\r\n)\r\n\r\nexport default PokemonList;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { listLoaded, cacheList } from '../../../redux/actions';\r\nimport { usePokemonService } from '../../../service/pokemonContext';\r\nimport useData from '../../customHooks/useData';\r\nimport Spinner from '../../Spinner';\r\nimport PokemonList from '../../PokemonList';\r\nimport './SearchList.scss';\r\n\r\nconst FilterFail = () => (\r\n    <p className=\"pokemon-list__failed\">Pokemons not found</p>\r\n)\r\n\r\nconst SearchList = ({ pokemonList, loadingList, listLoaded, listCache, cacheList }) => {\r\n    const { getAllPokemons } = usePokemonService();\r\n    const { getData } = useData(listLoaded, getAllPokemons);\r\n\r\n    useEffect(() => {\r\n        if (!listCache) {\r\n            if (window.matchMedia('(min-width: 768px)').matches) {\r\n                cacheList();\r\n                getData()\r\n            }\r\n        }\r\n\r\n    }, [getData, listCache, cacheList]);\r\n\r\n    if (loadingList) {\r\n        return <Spinner sm />\r\n    }\r\n\r\n    if (pokemonList.length === 0) {\r\n        return <FilterFail />\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-list\">\r\n            <PokemonList pokemons={pokemonList} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ pokemonList, loadingList, searchValue, listCache }) => {\r\n    const filteredPokemons = pokemonList.filter(item => item.name.includes(searchValue));\r\n\r\n    if (searchValue) {\r\n        return {\r\n            listCache,\r\n            loadingList,\r\n            pokemonList: filteredPokemons,\r\n\r\n        }\r\n    }\r\n\r\n    return { loadingList, pokemonList, listCache }\r\n}\r\n\r\nconst mapDispatchToProps = { listLoaded, cacheList };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchList);","import SearchList from './SearchList';\r\nexport default SearchList;","import SpinnerSm from './SpinnerSm';\r\nexport default SpinnerSm;","import React from 'react';\r\nimport './SpinnerSm.scss';\r\n\r\nconst SpinnerSm = ({ show }) => {\r\n    let className = \"loadingio-spinner-spinner-6uc1nwdc91a\";\r\n\r\n    if (show) {\r\n        className += ' loading'\r\n    }\r\n\r\n    return (\r\n        <div className={className}><div className=\"ldio-qff3vccm6lj\">\r\n            <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default SpinnerSm;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadMoreData, cardsLoaded, maxDataReached, cacheCards } from '../../../redux/actions'\r\nimport { usePokemonService } from '../../../service/pokemonContext';\r\nimport useData from '../../customHooks/useData';\r\nimport SpinnerSm from '../../SpinnerSm';\r\nimport './LoadMoreButton.scss';\r\n\r\nconst LoadMoreButton = ({ loadMoreData, loadMore, cardsLoaded, isMaxData, maxDataReached, cacheCards, cardsCache }) => {\r\n    const service = usePokemonService();\r\n    const { getData } = useData(cardsLoaded, service.getMorePokemons);\r\n\r\n    useEffect(() => {\r\n        if (service.step > service.MAX_DATA) {\r\n            maxDataReached();\r\n        }\r\n    }, [maxDataReached, service.step, service.MAX_DATA])\r\n\r\n    const loadHandler = () => {\r\n        if (cardsCache) {\r\n            loadMoreData();\r\n            cacheCards();\r\n            getData();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button className={isMaxData ? \"load-more hide\" : \"load-more\"} onClick={loadHandler}>\r\n            <span className=\"load-more__text\">Load more</span>\r\n            <SpinnerSm show={loadMore || false} />\r\n        </button>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ loadMore, isMaxData, cardsCache }) => ({ loadMore, isMaxData, cardsCache });\r\n\r\nconst mapDispatchToProps = { loadMoreData, cardsLoaded, maxDataReached, cacheCards };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoadMoreButton);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Card.scss';\r\n\r\nconst nodata = <span className=\"card__no-img\">Pokemon image not found</span>\r\n\r\nconst Card = ({ data }) => {\r\n    const { name, image } = data;\r\n\r\n    return (\r\n        <li className=\"card\">\r\n            <Link className=\"card__link link\" to={{ pathname: `/${name}` }}>\r\n                {image === 'No data' ? nodata : <img className=\"card__img img\" src={image} alt={name} />}\r\n                <span className=\"card__name\">{name}</span>\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\nexport default Card;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { cardsLoaded, fillDataGap, cacheCards } from '../../../redux/actions';\r\nimport { usePokemonService } from '../../../service/pokemonContext';\r\nimport LoadMoreButton from '../LoadMoreButton/LoadMoreButton';\r\nimport useData from '../../customHooks/useData';\r\nimport Card from '../Card';\r\nimport Spinner from '../../Spinner';\r\nimport './PokemonCards.scss';\r\n\r\n\r\nconst PokemonCards = ({ pokemonCards, loadingCards, cardsLoaded, fillDataGap, dataGap, cacheCards, cardsCache }) => {\r\n    const service = usePokemonService();\r\n    const { getData } = useData(cardsLoaded, service.getMorePokemons);\r\n\r\n    useEffect(() => {\r\n        if (service.step > 898 && dataGap) {\r\n            fillDataGap();\r\n            service.fillDataGap();\r\n        }\r\n    }, [service.step, fillDataGap, dataGap, service]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!cardsCache) {\r\n            cacheCards();\r\n            getData();\r\n        }\r\n    }, [getData, cacheCards, cardsCache]);\r\n\r\n    if (loadingCards) {\r\n        return <Spinner sm/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"pokemon-cards\">\r\n                {pokemonCards.map(data => {\r\n                    return <Card key={data.id} data={data} />\r\n                })}\r\n            </ul>\r\n            <LoadMoreButton />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ pokemonCards, loadingCards, dataGap, cardsCache }) => ({ loadingCards, pokemonCards, dataGap, cardsCache });\r\n\r\nconst mapDispatchToProps = { cardsLoaded, fillDataGap, cacheCards };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonCards);","import PokemonCards from './PokemonCards';\r\nexport default PokemonCards;","import React, { useEffect } from 'react';\r\nimport MainHeadline from '../MainHeadline';\r\nimport { connect } from 'react-redux';\r\nimport { hideMenu } from '../../redux/actions';\r\nimport SearchList from './SearchList';\r\nimport Search from './Search';\r\nimport PokemonCards from './PokemonCards';\r\nimport './HomePage.scss';\r\n\r\nconst HomePage = ({ hideMenu }) => {\r\n    useEffect(() => window.scrollTo(0, 0));\r\n    useEffect(() => hideMenu(), [hideMenu]);\r\n    useEffect(() => document.title = 'Pokemon');\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <MainHeadline home />\r\n            <div className=\"home__aside\">\r\n                <Search />\r\n                <div className=\"home__search-result\">\r\n                    <SearchList />\r\n                </div>\r\n            </div>\r\n            <div className=\"home__cards\">\r\n                <PokemonCards />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = { hideMenu };\r\n\r\nexport default connect(null, mapStateToProps)(HomePage);","import HomePage from './HomePage';\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst Nodata = () => (\r\n    <li>No data</li>\r\n)\r\n\r\nconst useNoData = (data, Component) => {\r\n    return data.length === 0 ? <Nodata/> : Component;\r\n}\r\n\r\nexport default useNoData;","import React from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport useNoData from '../../customHooks/useNoData';\r\nimport './Stats.scss';\r\n\r\n\r\nconst setChart = (data) => {\r\n    const labels = [];\r\n    const stats = [];\r\n\r\n    data.forEach(item => {\r\n        labels.push(...Object.keys(item));\r\n        stats.push(...Object.values(item));\r\n    })\r\n\r\n    const chartOptions = {\r\n        options: {\r\n            labels,\r\n            noData: {\r\n                text: \"Loading...\"\r\n            },\r\n            plotOptions: {\r\n                bar: {horizontal: true}\r\n            },\r\n        },\r\n        series: [{\r\n            name: \"stat\",\r\n            data: stats\r\n        }]\r\n    }\r\n\r\n    return <Chart type=\"bar\" width=\"100%\" options={chartOptions.options} series={chartOptions.series}/>\r\n}\r\n\r\nconst Stats = ({ data = [] }) => (\r\n    <div className=\"stats\">\r\n        <h3 className=\"stats__headline pokemon__details-headline\">Stats</h3>\r\n        {useNoData(data, setChart(data))}\r\n    </div>\r\n)\r\n\r\nexport default Stats;\r\n","import Stats from './Stats';\r\nexport default Stats;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useNoData from '../../customHooks/useNoData';\r\nimport './Evolution.scss';\r\n\r\nconst View = ({ data }) => (\r\n    data.map(({ id, name, image }) => (\r\n        <li key={id} className=\"evolution__item\">\r\n            <Link to={`/${name}`} className=\"evolution__link link\">\r\n                <img className=\"img evolution__img\" src={image} alt={name} />\r\n                <span className=\"evolution__name\">{name}</span>\r\n            </Link>\r\n        </li>\r\n    ))\r\n)\r\n\r\nconst Evolution = ({ data = [] }) => (\r\n    <div className=\"evolution\">\r\n        <h3 className=\"evolution__headline pokemon__details-headline\">Evolution</h3>\r\n        {data.length > 1 || data.length === 0 ? null : <p className=\"evolution__fail\">This pokemon does not evolve</p>}\r\n        <ul className=\"evolution__list\">\r\n            {useNoData(data, <View data={data}/>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Evolution;","import Evolution from './Evolution';\r\nexport default Evolution;","import Description from './Description';\r\nexport default Description;","import React from 'react';\r\nimport './Description.scss';\r\n\r\nconst Description = ({ data }) => (\r\n    <p className=\"description pokemon__description\">{data}</p>\r\n)\r\n\r\nexport default Description;","import Weight from './Weight';\r\nexport default Weight;","import React from 'react';\r\nimport './Weight.scss';\r\n\r\nconst Weight = ({ data }) => (\r\n    <div className=\"weight pokemon__info\">\r\n        <h3 className=\"weight__headline pokemon__details-headline\">Weight</h3>\r\n        <span className=\"weight__info\">{data} kg</span>\r\n    </div>\r\n)\r\n\r\nexport default Weight;","import Height from './Height';\r\nexport default Height;","import React from 'react';\r\nimport './Height.scss';\r\n\r\nconst Height = ({ data }) => (\r\n    <div className=\"height pokemon__info\">\r\n        <h3 className=\"height__headline pokemon__details-headline\">Height:</h3>\r\n        <span className=\"height__info\">{data} m</span>\r\n    </div>\r\n)\r\n\r\nexport default Height;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport './Gender.scss';\r\n\r\nconst female = '♀';\r\nconst male = '♂';\r\nconst genderless = 'unknown';\r\n\r\nconst View = ({ data }) => (\r\n    data.map((item, index) => (\r\n        <li className=\"gender__item\" key={index}>\r\n            {\r\n                item === 'male' ? male :\r\n                item === 'female' ? female :\r\n                genderless\r\n            }\r\n        </li>\r\n    ))\r\n)\r\n\r\nconst Gender = ({ data = [] }) => {\r\n    return (\r\n        <div className=\"gender pokemon__info\">\r\n            <h3 className=\"gender__headline pokemon__details-headline\">Gender</h3>\r\n            <ul className=\"gender__list\">\r\n                {useNoData(data, <View data={data}/>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gender;","import Gender from './Gender';\r\nexport default Gender;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport './Abilities.scss';\r\n\r\nconst View = ({ data }) => (\r\n    data.map((item, index) => (\r\n        <li className=\"abilities__item\" key={index}>{item.name}</li>\r\n    ))\r\n)\r\n\r\nconst Abilities = ({ data = [] }) => (\r\n    <div className=\"abilities pokemon__info\">\r\n        <h3 className=\"abilities__headline pokemon__details-headline\">Abilities</h3>\r\n        <ul className=\"abilities__list\">\r\n            {useNoData(data, <View data={data}/>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Abilities;","import Abilities from './Abilities';\r\nexport default Abilities;","import Category from './Category';\r\nexport default Category;","import React from 'react';\r\nimport './Category.scss';\r\n\r\nconst Category = ({ data }) => (\r\n    <div className=\"category pokemon__info\">\r\n        <h3 className=\"category__headline pokemon__details-headline\">Category:</h3>\r\n        <span className=\"category__info\">{data}</span>\r\n    </div>\r\n)\r\n\r\nexport default Category;","import Habitat from './Habitat';\r\nexport default Habitat;","import React from 'react';\r\nimport './Habitat.scss';\r\n\r\nconst Habitat = ({ data }) => (\r\n    <div className=\"habitat pokemon__info\">\r\n        <h3 className=\"habitat__headline pokemon__details-headline\">Habitat</h3>\r\n        <span className=\"habitat__info\">{data}</span>\r\n    </div>\r\n)\r\n\r\nexport default Habitat;","import DetailMain from './Detail-main';\r\nexport default DetailMain;","import React from 'react';\r\nimport Description from './Description';\r\nimport Weight from './Weight';\r\nimport Height from './Height';\r\nimport Gender from './Gender';\r\nimport Abilities from './Abilities';\r\nimport Category from './Category';\r\nimport Habitat from './Habitat';\r\n\r\nconst DetailMain = ({ data: { description, weight, height, gender, abilities, category, habitat } }) => (\r\n    <>\r\n        <Description data={description} />\r\n        <Weight data={weight} />\r\n        <Height data={height} />\r\n        <Gender data={gender} />\r\n        <Abilities data={abilities} />\r\n        <Category data={category} />\r\n        <Habitat data={habitat} />\r\n    </>\r\n)\r\n\r\nexport default DetailMain;","import TypeItem from './TypeItem';\r\nexport default TypeItem;","import React from 'react';\r\nimport { useRouteMatch, Link } from 'react-router-dom';\r\nimport './TypeItem.scss';\r\n\r\nconst TypeItem = ({ data }) => {\r\n    const { url } = useRouteMatch();\r\n\r\n    return (\r\n        data.map((item, index) => (\r\n            <li className=\"type-item\" key={index}>\r\n                <Link className=\"type-item__link link\" to={`${url}/${item}`}>{item}</Link>\r\n            </li>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default TypeItem;","import Weaknesses from './Weaknesses';\r\nexport default Weaknesses;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport TypeItem from '../TypeItem';\r\n\r\nconst Weaknesses = ({ data = [] }) => (\r\n    <div>\r\n        <h3 className=\"pokemon__type-headline\">Weaknesses</h3>\r\n        <ul className=\"pokemon__type-list\">\r\n            {useNoData(data, <TypeItem data={data}/>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Weaknesses;","import Strengths from './Strengths';\r\nexport default Strengths;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport TypeItem from '../TypeItem';\r\n\r\nconst Strengths = ({ data = [] }) => (\r\n    <div>\r\n        <h3 className=\"pokemon__type-headline\">Strengths</h3>\r\n        <ul className=\"pokemon__type-list\">\r\n            {useNoData(data, <TypeItem data={data}/>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Strengths;","import Type from './Type';\r\nexport default Type;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport TypeItem from '../TypeItem';\r\n\r\nconst Type = ({ data = [] }) => (\r\n    <div>\r\n        <h3 className=\"pokemon__type-headline\">Type</h3>\r\n        <ul className=\"pokemon__type-list\">\r\n            {useNoData(data, <TypeItem data={data} />)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Type;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, Link, useHistory } from 'react-router-dom';\r\nimport { typesLoaded, updateLoadingFilterStatus, typesFail } from '../../../../redux/actions';\r\nimport { usePokemonService } from '../../../../service/pokemonContext';\r\nimport useData from '../../../customHooks/useData';\r\nimport PokemonList from '../../../PokemonList/';\r\nimport Spinner from '../../../Spinner';\r\nimport './FilteredTypes.scss';\r\n\r\nconst FilteredTypes = ({ filteredTypes, typesLoaded, loadingFilter, updateLoadingFilterStatus, typesFail, filteredTypesFail }) => {\r\n    const { getFilteredTypes } = usePokemonService();\r\n    const { getData } = useData(typesLoaded, getFilteredTypes, typesFail);\r\n    const { id, type: pokemonType } = useParams();\r\n    const { goBack } = useHistory();\r\n\r\n    useEffect(() => {\r\n        updateLoadingFilterStatus();\r\n        getData(pokemonType);\r\n    }, [getData, pokemonType, updateLoadingFilterStatus]);\r\n\r\n    if (filteredTypesFail) {\r\n        return (\r\n            <div className=\"type-filter-fail\">\r\n                <p className=\"type-filter-fail__text\">Wrong pokemon type</p>\r\n                <button className=\"type-filter-fail__button\" onClick={goBack}>back</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (loadingFilter) {\r\n        return <Spinner sm />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"type-filter-close link\" to={`/${id}`}>\r\n                <span className=\"name\">{pokemonType}</span>\r\n                <span className=\"icon\">&times;</span>\r\n            </Link>\r\n            <div className=\"filtered-types\">\r\n                <PokemonList pokemons={filteredTypes} types />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ filteredTypes, loadingFilter, filteredTypesFail }) => ({ filteredTypes, loadingFilter, filteredTypesFail });\r\n\r\nconst mapDispatchToProps = { typesLoaded, updateLoadingFilterStatus, typesFail }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilteredTypes);","import FilteredTypes from './FilteredTypes';\r\nexport default FilteredTypes;","import DetailTypes from './Detail-types';\r\nexport default DetailTypes;","import React from 'react';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport Weaknesses from './Weaknesses';\r\nimport Strengths from './Strengths';\r\nimport Type from './Type';\r\nimport FilteredTypes from './FilteredTypes';\r\n\r\nconst DetailTypes = ({ data: { types, weaknesses, strengths } }) => {\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={`${path}`}>\r\n                <Type data={types} />\r\n                <Weaknesses data={weaknesses} />\r\n                <Strengths data={strengths} />\r\n            </Route>\r\n            <Route path={`${path}/:type`}>\r\n                <FilteredTypes />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default DetailTypes;","import NonExistentPage from './404';\r\nexport default NonExistentPage;","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './404.scss';\r\n\r\nconst NonExistentPage = () => {\r\n    useEffect(() => {\r\n        document.title = '404 - Page does not exists'\r\n    })\r\n\r\n    const { goBack } = useHistory();\r\n\r\n    return (\r\n        <div className=\"non-existent-page\">\r\n            <div className=\"non-existent-page__text\">\r\n                <h1>404</h1>\r\n                <p>page not found</p>\r\n                <button className=\"non-existent-page__back\" onClick={goBack}>Go back</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NonExistentPage;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { pokemonLoaded, pageNotFound, updateLoadingStatus } from '../../redux/actions';\r\nimport { usePokemonService } from '../../service/pokemonContext';\r\nimport useData from '../customHooks/useData';\r\nimport MainHeadline from '../MainHeadline';\r\nimport Stats from './Stats';\r\nimport Evolution from './Evolution';\r\nimport DetailMain from './Detail-main';\r\nimport DetailTypes from './Detail-types';\r\nimport Spinner from '../Spinner';\r\nimport NonExistentPage from '../404';\r\nimport './PokemonPage.scss';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n\r\nconst PokemonPage = ({ singlePokemonData: data, pokemonLoaded, loadingPokemon, pageFail, pageNotFound, updateLoadingStatus }) => {\r\n    const { getCurrentPokemon } = usePokemonService();\r\n    const { getData } = useData(pokemonLoaded, getCurrentPokemon, pageNotFound);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        updateLoadingStatus();\r\n        window.scrollTo(0, 0);\r\n        getData(id);\r\n    }, [getData, id, updateLoadingStatus]);\r\n\r\n    useEffect(() => {\r\n        const name = `${id[0].toUpperCase()}${id.slice(1)}`;\r\n\r\n        if (!pageFail) {\r\n            document.title = `Pokemon - ${name}`;\r\n        }\r\n    });\r\n\r\n    if (pageFail) {\r\n        return <NonExistentPage />\r\n    }\r\n\r\n    if (loadingPokemon) {\r\n        return <Spinner />\r\n    }\r\n\r\n    return (\r\n        <section className=\"pokemon\">\r\n            <MainHeadline headline={data.name} />\r\n            <div className=\"pokemon__image\">\r\n                <img className=\"img\" src={data.image} alt={data.name} />\r\n            </div>\r\n            <div className=\"pokemon__details pokemon__details--main\">\r\n                <DetailMain data={data}/>\r\n            </div>\r\n            <div className=\"pokemon__details pokemon__details--type\">\r\n                <DetailTypes data={data}/>\r\n            </div>\r\n            <div className=\"pokemon__details pokemon__details--stats\">\r\n                <Stats data={data.stats} />\r\n            </div>\r\n            <div className=\"pokemon__details pokemon__details--evolution\">\r\n                <Evolution data={data.evolution} />\r\n            </div>\r\n            <Link to={{ pathname: '/' }} className=\"pokemon__go-home link\">Discover more pokemons</Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ singlePokemonData, loadingPokemon, pageFail }) => ({ singlePokemonData, loadingPokemon, pageFail })\r\n\r\nconst mapDispatchToProps = { pokemonLoaded, pageNotFound, updateLoadingStatus };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonPage);","import PokemonPage from './PokemonPage';\r\nexport default PokemonPage;","import App from './App';\r\nexport default App;","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Navigation from '../Navigation';\r\nimport AdditionalPage from '../AdditionalPage';\r\nimport HomePage from '../HomePage';\r\nimport PokemonPage from '../PokemonPage';\r\nimport './App.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = ({ redirect }) => {\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <div className=\"container\">\r\n                    <Route component={Navigation} path=\"/\" />\r\n                </div>\r\n            </header>\r\n            <main className=\"main\">\r\n                <div className=\"container\">\r\n                    {redirect && <Redirect to={`/${redirect}`} />}\r\n                    <Switch>\r\n                        <Route component={HomePage} path=\"/\" exact />\r\n                        <Route component={AdditionalPage} path=\"/additional\" />\r\n                        <Route component={PokemonPage} path=\"/:id\" />\r\n                    </Switch>\r\n\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ redirect }) => ({ redirect });\r\n\r\nexport default connect(mapStateToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport store from './redux/store';\nimport ErrorBoundry from './components/ErrorBoundary';\nimport { PokemonProvider } from './service/pokemonContext';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <PokemonProvider>\n        <Router>\n          <React.StrictMode>\n            <App />\n          </React.StrictMode>,\n        </Router>\n      </PokemonProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}